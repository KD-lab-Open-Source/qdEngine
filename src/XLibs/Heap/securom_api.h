//*****************************************************************************************
// Copyright (c) 2005 Sony DADC
// All rights reserved.
//
// $FileName    : securom_api.h
// $ProjectName : SDK
// $Created     : 02.03.2005  12:14
//
// Content:
//
//*****************************************************************************************

#ifndef SECUROM_SDK_H
#define SECUROM_SDK_H

#include <windows.h>
#include <stdio.h>

#include "drm_api_defines.h"

static BOOL SecuROM_Tripwire()
{
	char	event_name[50];

	sprintf(event_name, "v7_%04d", (GetCurrentProcessId() ^ 0x19EA3FD3) );

	if(HANDLE S7hnd = OpenEventA(EVENT_MODIFY_STATE, FALSE, event_name))
	{
		CloseHandle(S7hnd);
		return TRUE;
	}

	return FALSE;
}

#define SECUROM_MARKER_PERFORMANCE_ON(id) { { __asm _emit 0xEB __asm _emit 0x0E __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x01 __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) }
#define SECUROM_MARKER_PERFORMANCE_OFF(id) { __asm _emit 0xEB __asm _emit 0x0E __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x02 __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) } }

#define SECUROM_MARKER_SECURITY_ON(id) { { __asm _emit 0xEB __asm _emit 0x0E __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x11  __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) }
#define SECUROM_MARKER_SECURITY_OFF(id) { __asm _emit 0xEB __asm _emit 0x0E __asm __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x12 __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) } }

#define SECUROM_MARKER_HIGH_SECURITY_ON(id) { { __asm _emit 0xEB __asm _emit 0x0E __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x21  __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) }
#define SECUROM_MARKER_HIGH_SECURITY_OFF(id) { __asm _emit 0xEB __asm _emit 0x0E __asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' __asm _emit 0x22 __asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF) } }

#define SECUROM_MARKER_VM_CALL(id, code, data) { __asm _emit 0xEB __asm _emit 0x18  \
			__asm _emit 'M' __asm _emit 'a' __asm _emit '0' __asm _emit 'W' __asm _emit 'y' __asm _emit 'G' __asm _emit '1' __asm _emit 'k' __asm _emit 'm' \
			__asm _emit 0x31   \
			__asm _emit (id & 0xFF) __asm _emit ((id >> 8) & 0xFF) __asm _emit ((id >> 16) & 0xFF) __asm _emit ((id >> 24) & 0xFF)  \
			__asm push offset code \
			__asm push offset data }

static unsigned char MACRO_ADD[] =
{
	0xEC,0xAF,0xCA,0x36,0xB7,0x0D,0x59,0xC1,0xFA,0xA7,0x71,0xB1,0x23,0xC5,0x8E,0x65,0xD1,0x36,0x03,0x12,
	0x7A,0x2C,0x31,0x3A,0x3E,0x14,0x5D,0xD2,0x0C,0x51,0x66,0xC7,0xE1,0x60,0x98,0x6A,0x16,0x9D,0xA8,0x80,
	0xE4,0x7A,0x94,0xB2,0xA2,0xF5,0x6E,0x27,0xF5,0x0A,0x3F,0xC5,0xFF,0x20,0x4C,0xB8,0xC5,0x72,0x71,0x9A,
	0xA9,0xA0,0xDD,0x4F,0x68,0x53,0xB1,0xFA,0x26,0x14,0x85,0x94,0x21,0x14,0x80,0x5C,0x70,0xBA,0xC5,0xF6,
	0x58,0xDB,0xAE,0xE5,0x8D,0xCD,0xDC,0x6A,0x9C,0x11,0xFC,0x6D,0x33,0x17,0xFB,0xF2,0x30,0xF2,0xE0,0xD3,
	0xE3,0x92,0xAC,0x46,0xC7,0x86,0x9B,0x6E,0x74,0x5D,0xB1,0x05,0xB9,0xFA,0x75,0x9F,0x84,0x57,0x2A,0x40,
	0x72,0xE7,0xC9,0xCB
};

static unsigned char MACRO_SUB[] =
{
	0xEC,0xAF,0xCA,0x36,0xB7,0x0D,0x59,0xC1,0xFA,0xA7,0x71,0xB1,0x23,0xC5,0x8E,0x65,0xD1,0x36,0x03,0x12,
	0x7A,0x2C,0x31,0x3A,0x3E,0x14,0x5D,0xD2,0x0C,0x51,0x66,0xC7,0xE1,0x60,0x98,0x6A,0x16,0x9D,0xA8,0x80,
	0xE4,0x7A,0x94,0xB2,0xA2,0xF5,0x6E,0x27,0xF5,0x0A,0x3F,0xC5,0xFF,0x20,0x4C,0xB8,0xC5,0x72,0x71,0x9A,
	0xA9,0xA0,0xDD,0x4F,0x68,0x53,0xB1,0xFA,0x26,0x14,0x85,0x94,0x21,0x14,0x80,0x5C,0x70,0xBA,0xC5,0xF6,
	0x58,0xDB,0xAE,0xE5,0x8D,0xCD,0xDC,0x6A,0x9C,0x11,0xFC,0x6D,0x33,0x17,0xFB,0xF2,0x22,0xEC,0xB5,0xFD,
	0x75,0xCA,0x2B,0x55,0xCC,0x2B,0xBE,0xFC,0xC6,0x73,0x3C,0xEF,0xFD,0xD7,0x8B,0x86,0x69,0x4A,0x6A,0x80,
	0xF0,0x6E,0xA7,0x09
};

static unsigned char MACRO_IF_EQL[] =
{
	0xEC,0xAF,0xAA,0x93,0x2D,0x04,0xA3,0x8F,0x8A,0x10,0x67,0x91,0xC9,0xE1,0xDA,0x2C,0x31,0x1D,0x82,0xE2,
	0x07,0xF9,0xE8,0x24,0x75,0xE9,0x9D,0x54,0x70,0x36,0x4F,0xFF,0xDD,0x4A,0x82,0x14,0x88,0x48,0x74,0x51,
	0x3F,0xBA,0x51,0x98,0xE9,0x1D,0x27,0xB1,0x7B,0x97,0x27,0x46,0x9A,0x46,0x64,0xD4,0xEF,0x92,0xF0,0x05,
	0x5E,0x79,0xED,0x8D,0x34,0x52,0x8A,0x90,0xE9,0xBA,0x3C,0xBE,0x8B,0xE5,0xCA,0x28,0xB0,0x92,0xDE,0x4C,
	0xD8,0x31,0xCE,0xCE,0x8E,0x22,0x78,0xF8,0x7C,0xCE,0xF6,0x4E,0x84,0xD0,0xEE,0xB5,0x0B,0x8E,0x53,0xD5,
	0xCE,0x7C,0x4F,0x2F,0xFA,0xF6,0xBF,0xC8,0x70,0x5A,0x0E,0x00,0xDB,0x93,0x44,0x83,0xF4,0xFC,0xEB,0x2F,
	0x31,0x1D,0x02,0x23,0x9E,0x8A,0xB5,0x13,0x68,0x48,0x3D,0x76,0x01,0xFE,0x40,0x78,0x2C,0xB7,0x09,0x39,
	0xCF,0xA4,0x58,0x87,0x72,0xF8,0xA0,0xBC,0xE9,0xA3,0xD0,0xC0,0x78,0x80,0xFA,0xDC,0x05,0x9A,0x0C,0x40,
	0x9C,0xB6,0x62,0xD4,0x6E,0xA0,0x18,0x9A,0xEE,0x85,0x4A,0xB0,0x63,0xD3,0x2A,0x84,0xCA,0x3C,0x55,0xA9,
	0xD2,0x18,0xAE,0x4D,0x40,0x80,0xE5,0x7A,0x95,0x33,0x90,0xF2,0xF6,0x06,0xD9,0x65,0x4D,0x2B,0x95,0x29,
	0x02,0xB9,0xF9,0xA6,0x05,0x56,0x13,0x2B,0x9F,0x69,0xFA,0xF1,0xBB,0x28,0xA6,0x71,0x40,0x11,0xD7,0x86,
	0x04,0xEE,0xB6,0xEE,0xBA,0xC6,0x45,0x07,0x75,0xEC,0xC5,0xD0,0x7D,0x8C,0xC5,0x51,0x63,0xB4,0xEA,0x51,
	0x63,0xB4,0xEA,0xD6,0x61,0xB1,0xE1,0xBF,0xD4,0x5E,0xAD,0x7D,0xD5,0x03,0x53,0x50,0x9C,0x68,0x1B,0xA5,
	0xB4,0xF8,0x66,0x1E,0xC6,0x76,0x19,0xA9,0x2F,0x54,0xE6,0xC1,0x41,0x47,0xF1,0x1A,0x37,0x47,0x78,0xC5,
	0x40,0x7A,0x28,0xA6,0xF1,0x44,0x14,0x8E,0x88,0x15,0xAE,0xF0,0x91,0x0F,0x6A,0xE3,0x9D,0x9B,0x71,0x99,
	0x02,0x34,0xE8,0x5F,0x02,0xB5,0x6F,0x45,0x2A,0x5A,0xEF,0x4B,0xD2,0x7A,0xEF,0x4B,0x53,0x58,0x73,0xA4,
	0x1A,0x1B,0x15,0xE8,0x04,0xC2,0xC3,0x65,0xA5,0x0B,0x16,0xCC,0x26,0xF0,0x26,0xDB,0xCA,0x4A,0x37,0x03,
	0x79,0x64,0x0D,0x2A,0xBA,0x57,0x61,0xBD,0xFC,0xE7,0x0D,0xCD,0x72,0xF9,0xDE,0xAB,0x87,0x54,0x8F,0x0E,
	0x26,0xD5,0x8A,0x78,0x15,0x6C,0x4B,0xDB,0x15,0x6C,0x4B,0xDB,0x15,0x6C,0x4B,0xDB,0x95,0x12,0xF0,0xF9,
	0x1D,0x10,0x9F,0xC3,0xA8,0x84,0xB0,0x47,0x58,0x67,0x94,0x58,0x6D,0x8A,0xFE,0x64,0xDA,0x71,0xCF,0x2D,
	0xDA,0xD3,0x6D,0x83,0xE2,0x07,0x1F,0x47,0xB7,0x1B,0xAF,0x88,0x21,0xDE,0x8C,0x98,0x52,0xA8,0x70,0x32,
	0x92,0x80,0x1B,0x00,0xFD,0x49,0x32,0xF0,0x1E,0xB8,0xDB,0x65,0x33,0x93,0x93,0x8E,0xA0,0x97,0xEF,0xA7,
	0xE3,0xD2,0x84,0x49,0x2C,0xE0,0xD9,0xC0,0x59,0xF8,0xCD,0x62,0x83,0xEF,0x7B,0x55,0x5D,0x6B,0x7F
};

static unsigned char DRM_API[] =
{
	0x8C,0x0A,0x35,0xD5,0xCB,0x68,0x99,0x99,0x24,0x30,0xF8,0x01,0xF5,0x0A,0x5C,0x63,0xBB,0xAD,0xD7,0xA6,
	0xA5,0x8A,0x39,0x91,0xF4,0x33,0x3E,0xA4,0xCD,0x10,0x68,0xB1,0x0D,0xB8,0xA4,0x2D,0xC4,0x55,0x81,0x4D,
	0xA0,0xAF,0xD9,0xD3,0x55,0x88,0xB9,0x9D,0xCC,0xA4,0x47,0x72,0xC5,0x20,0x4D,0x10,0x15,0xC4,0x8C,0xF6,
	0x83,0x8E,0x26,0x8D,0xFB,0x5B,0x44,0x4F,0xC0,0x64,0x33,0x3D,0xB7,0xED,0x88,0x57,0x1E,0xCA,0x1F,0x32,
	0x0A,0x7B,0x86,0xC9,0x50,0x9B,0xBE,0xFD,0xFF,0x2B,0x92,0x85,0x3F,0x84,0xE2,0xF4,0x43,0x5E,0xE5,0x93,
	0x76,0xB3,0xCD,0xB3,0xC4,0xFF,0x62,0x22,0xD4,0xD6,0x54,0xA8,0x33,0xD7,0xDC,0x13,0xF5,0xFA,0xBB,0x2F,
	0x5F,0x67,0xA9,0xC9,0xAC,0xF5,0x76,0xA5,0x63,0xBA,0x90,0xB6,0x8E,0xCC,0x7F,0x64,0x4B,0xC2,0x16,0xBC,
	0xBF,0x2F,0xA2,0x5C,0x2B,0x96,0xC8,0xB4,0x52,0xD5,0x61,0x16,0x84,0xE5,0x04,0x54,0xD4,0x14,0xED,0x0B,
	0x86,0x40,0xA7,0x6E,0x34,0x02,0x30,0x53,0xD4,0x64,0x30,0x6B,0x7E,0xA3,0xA4,0x52,0x92,0x95,0x1D,0xD7,
	0xE9,0x08,0xD3,0x4C,0xD8,0x13,0x0F,0x07,0x24,0x1D,0xB5,0x27,0xC8,0xA1,0xC5,0x20,0xDB,0x01,0xFC,0x07,
	0xF2,0xDA,0x2A,0x16,0xDE,0xD6,0xC8,0x6D,0x2E,0xA6,0x89,0xDF,0x48,0x98,0x69,0x35,0x54,0x3D,0xCE,0x83,
	0x21,0xDB,0x01,0x7E,0x07,0xF0,0x55,0x3B,0x94,0x1D,0xCF,0x6D,0x3A,0x19,0x18,0x29,0x83,0x51,0x93,0x9C,
	0x48,0x1A,0x22,0xB8,0xF9,0xC6,0x10,0x05,0x91,0x6A,0xB3,0xF4,0x09,0xB2,0x91,0xE1,0x2B,0x37,0x9E,0x29,
	0xCB,0xBD,0x36,0xFB,0xFD,0x3F,0x48,0x72,0x58,0x0E,0x23,0xD5,0x37,0x17,0x80,0xF0,0x41,0x21,0x78,0xD9,
	0x7E,0xCC,0x29,0xDB,0xD4,0xED,0x04,0xA0,0x0F,0x79,0xC0,0xE7,0x50,0x5E,0x30,0x1F,0x94,0x9A,0xA2,0x2E,
	0xB7,0xEE,0xAC,0x7A,0x39,0x7B,0xC6,0x05,0x08,0x32,0x34,0x2A,0xD3,0x18,0x2E,0x3C,0x56,0x03,0xC0,0x74,
	0xBB,0x2E,0x15,0x3A,0x52,0x93,0x88,0xBC,0x67,0xEB,0x95,0x94,0xEB,0x64,0x5E,0x77,0x60,0xAD,0xA8,0x26,
	0xC7,0x8D,0xD8,0xD0,0xDC,0x4F,0x79,0xD8,0x6F,0xA0,0x4E,0xF1,0x28,0x7D,0xD4,0x63,0xF7,0x81,0xFC,0x5C,
	0xFB,0x8F,0x6C,0x49,0x28,0x7E,0x16,0x1B,0xAA,0x91,0x99,0xA8,0xB9,0xC5,0x6C,0x14,0x91,0xE5,0xA4,0xE2,
	0x31,0x6F,0x95,0xC9,0x63,0xD0,0xEF,0xC1,0x98,0x97,0xE8,0xC4,0x56,0xAE,0x52,0x49,0xCA,0x86,0xCA,0x31,
	0xD7,0xA7,0x50,0x1B,0x2F,0x9C,0x4C,0x96,0x14,0x02,0x18,0x43,0x85,0xA1,0xBC,0xE9,0xA2,0xD0,0x43,0x7A,
	0x82,0xF7,0xD9,0x4B,0x8A,0x65,0x88,0x61,0x33,0x75,0x08,0xF2,0x82,0xE1,0x22,0xB3,0x09,0x33,0x59,0x29,
	0x75,0xCA,0x00,0x89,0x25,0x75,0x2E,0xD6,0x0E,0x24,0xDC,0x59,0xB3,0x44,0xA9,0x96,0x12,0x3E,0x2F,0x07,
	0x42,0x56,0x84,0x69,0x9E,0xA6,0xAF,0xF5,0x46,0x2B,0x19,0xB0,0x74,0xB2,0x7B,0xFC,0x70,0x61,0x1A,0xEB,
	0xD6,0x05,0x33,0x18,0x20,0x0F,0xF3,0x58,0x6A,0xB4,0x67,0xE7,0x1E,0x9D,0x6F,0x54,0x49,0xE0,0xED,0xFE,
	0x42,0x3B,0xFD,0xBC,0xC5,0x35,0x37,0x02,0x19,0xC0,0xFB,0x2B,0x36,0x9E,0xA2,0x62,0xF9,0xF8,0x26,0x5C,
	0xB9,0x71,0x13,0x49,0xF2,0x7C,0x6B,0x09,0x31,0x6A,0xAD,0xAF,0x73,0x2B,0xCC,0x27,0x33,0x6F,0x37,0x7A,
	0xCC,0x06,0x11,0xFE,0xC4,0xED,0x95,0x4B,0x33,0x1E,0xBA,0xEF,0x47,0x00,0x40,0xE6,0x1D,0x55,0x3E,0xBD,
	0x78,0x60,0xAD,0xCD,0xB4,0x5F,0x22,0x76,0xDF,0xBF,0x36,0x06,0x99,0x5F,0xF9,0x2C,0x34,0xFE,0xAD,0x09,
	0xAF,0x5C,0x34,0xFE,0x2A,0xFB,0x7B,0x4C,0x4E,0xCB,0x7C,0x32,0xB8,0x5F,0xE0,0xA4,0xFE,0x5A,0xFD,0x23,
	0xD7,0xE0,0xD2,0x2C,0x77,0x9C,0xAF,0xF4,0xC1,0x15,0x58,0x29,0x31,0x19,0x3E,0x72,0x10,0x9B,0x7D,0x51,
	0x1A,0x41,0xC0,0xFB,0x90,0x40,0x9D,0xB3,0x8A,0x90,0x9D,0x56,0x86,0xCA,0xF8,0x47,0x24,0x4E,0x84,0x50,
	0xFB,0xE1,0xDF,0xBD,0x33,0x79,0xCE,0xFD,0x93,0x9F,0xED,0x44,0xC2,0x99,0x65,0x51,0x9A,0xC2,0xF8,0xC7,
	0x24,0xCE,0x47,0xDB,0xD2,0x12,0x92,0x15,0xE7,0x48,0x51,0xB3,0xD8,0xD8,0x49,0xB8,0xC2,0x53,0x9F,0x75,
	0x16,0x08,0xC4,0x79,0x17,0x10,0xA5,0x4C,0x62,0x85,0x49,0xF8,0xEF,0x89,0xE2,0x0C,0xE0,0xB0,0xC3,0xD2,
	0x4A,0x98,0xED,0xC2,0x55,0x4D,0x98,0x47,0x7E,0x63,0x53,0x0D,0x71,0x0D,0x41,0x2F,0x8F,0xE5,0xC7,0x57,
	0xC1,0x2B,0xB2,0x19,0xFA,0x04,0xC6,0x2B,0x8F,0x65,0xD7,0xEA,0xDF,0x58,0x7F,0x71,0x8E,0x4E,0x20,0x4F,
	0x6A,0x16,0x82,0xAD,0x67,0x05,0x4F,0xAB,0x21,0x5C,0x29,0x46,0x89,0x61,0x14,0xFD,0xB8,0xDF,0x61,0xB0,
	0x51,0xEE,0xF0,0x9F,0x60,0x2D,0x3D,0xB1,0xB7,0x87,0x41,0xEC,0xC2,0xFD,0x79,0x97,0xE0,0x6D,0xB4,0xC6,
	0x08,0x55,0x88,0x8E,0x21,0xFA,0x2F,0x69,0x0B,0xA6,0x0C,0x7E,0x2D,0x13,0x40,0x1D,0xA4,0xBF,0xE1,0xD1,
	0xC9,0x59,0x19,0x29,0xBC,0x41,0x76,0xA4,0x8B,0xF5,0x41,0xE0,0x8A,0xF0,0xC4,0x2B,0xBD,0x16,0xED,0xBF,
	0xFA,0x2B,0xEB,0x34,0x0F,0x9F,0x43,0xFD,0x24,0x33,0xF9,0x49,0x6B,0x45,0x91,0xC2,0x3C,0x5F,0x05,0x85,
	0xA1,0xBC,0xEE,0xA2,0xD1,0xCD,0xAD,0x90,0xF0,0x5A,0x35,0x9C,0x6D,0xD0,0x06,0xF7,0x06,0xBE,0x68,0x26,
	0xAC,0x17,0x16,0xD6,0xE1,0x09,0xF7,0x68,0x43,0x26,0x46,0x0D,0x2B,0x5B,0x70,0xEF,0x88,0x30,0xD9,0xE0,
	0xE2,0x07,0x72,0x49,0x3D,0xCE,0xC4,0x48,0x67,0x82,0x05,0x71,0xC7,0x08,0xE8,0x56,0x0D,0x7A,0x29,0x67,
	0xEA,0xAF,0xF4,0x91,0x52,0x73,0xE0,0xB8,0xED,0xD1,0xFC,0x02,0xC3,0x06,0xB3,0xC5,0xD5,0x20,0x4D,0x69,
	0x09,0x2F,0xA8,0x30,0xBC,0xFF,0x56,0x51,0xE3,0xA6,0x48,0xEC,0xAE,0xCA,0x31,0x9F,0xFA,0x9D,0x3B,0xF7,
	0x14,0xC2,0xDE,0x4B,0x86,0x5A,0xC7,0xAA,0x98,0x3A,0xFF,0xFB,0x6F,0xC2,0x55,0x33,0x13,0x04,0x37,0x61,
	0xD2,0xFD,0x7A,0x84,0x48,0x96,0x81,0xE6,0x51,0x99,0x3D,0xB3,0xDF,0x29,0x30,0x12,0x76
};

//cpuid
static unsigned char SPOT1[] =
{
	0xEC,0xAF,0xCA,0x36,0xB7,0x0D,0x39,0xE7,0xFD,0xEA,0x23,0x75,0x0E,0x7F,0x9D,0xB1,0x8C,0x44,0x83,0x72,
	0x0D,0x2A,0x5A,0x70,0xEC,0x09,0xB3,0xD9,0x4E,0xBE,0xAB,0x81,0x6C,0xDD,0x83,0x06,0xF1,0xF8,0xD1,0xE9,
	0xD5,0xB9,0x34,0x0B,0x1C,0xC4,0xFF,0x21,0x32,0x99,0x2D,0x84,0x84,0x25,0x87,0x00,0xEE,0xC6,0x12,0xDA,
	0x83,0x17,0x82,0x55,0x73,0xB7,0x41,0x7D,0x9D,0x55,0xC0,0xCD,0xCE,0x86,0x0B,0xCC,0x6F,0x5A,0x32,0x45,
	0xC6,0x07,0x0A,0x37,0xB7,0x28,0x51,0x1E,0xAD,0x6A,0x5A,0x37,0x60,0xEA,0xDF,0x95,0x5D,0x5C,0x24,0x59,
	0x24,0x02,0x89,0x39,0xF4,0x2D,0x54,0x14,0xA8,0x8A,0xD3,0x01,0xEF,0x43,0x69,0x5C,0x5A,0x53,0xFD,0x6C,
	0x6B,0x01,0x89,0x27,0x75,0xAE,0xE9,0x8E,0x64,0x53,0x33,0xA4,0x8A,0xA0,0xA3,0x97,0xD4,0x53,0x51,0x58,
	0x2F,0x88,0xB2,0x15,0x5A,0x56,0xEE,0xBD,0x7F,0xD0,0x35,0xDA,0x36,0x7D,0x0C,0xDB,0x52,0x9D,0x56,0xF9,
	0xC1,0x1F,0x07,0x47,0xB1,0x3F,0xD9,0x6D,0x14,0x65,0x99,0x30,0x66,0x50,0xD7,0xD2,0x3F,0x7D,0x73,0xF7,
	0x5E,0x55,0x63,0xD1,0xE0,0x78,0x80,0xFB,0xDF,0x0C,0x6A,0x34,0x07,0xE2,0x79,0xB4,0x11,0x96,0x4F,0x75,
	0xA6,0x2E,0x7E,0xE1,0xE2,0x70,0x89,0xCB,0xC6,0x8F,0x6E,0xEB,0xBC,0xBF,0x27,0x1F,0x2C,0x00,0xC8,0xEA,
	0xFC,0x2E,0xFE,0xED,0x3D,0x71,0x88,0xC9,0xC1,0xAF,0x11,0xDC,0xC5,0xD7,0xF6,0x1F,0x32,0x90,0x7A,0x73,
	0x77,0x4C,0xEF,0xA2,0x2A,0x91,0x28,0x88,0x60,0xB0,0x48,0x13,0x40,0x5F,0xA7,0x98,0x16,0x34,0xB4,0xC3,
	0x38,0xAF,0xBE,0xE6,0xC2,0xF0,0x88,0xCB,0xC7,0x0E,0xD3,0x92,0x7C,0x5D,0x26,0x5A,0xA4,0x99,0x85,0xAF,
	0x84,0xA6,0xBB,0x70,0xCF,0x88,0xB0,0x5A,0x0E,0x04,0xE0,0x9F,0xD4,0x09,0x1D,0xF3,0xBA,0xA6,0x8C,0x41,
	0xA7,0x43,0x68,0xBC,0x64,0xEB,0x95,0x94,0x6B,0xF0,0xCE,0x6B,0xB8,0xED,0x80,0xFE,0xCD,0x94,0x62,0x2F,
	0xA6,0x5D,0x66,0xC0,0xE1,0x60,0x9B,0xEB,0xD7,0x01,0xE9,0xC9,0xA6,0x37,0x1B,0x27,0xD9,0x89,0x4B,0x41,
	0xFB,0x60,0x59,0x64,0x6D,0x8E,0xB6,0x4F,0x05,0xC7,0xE7,0x3E,0x57,0x4B,0x2A,0xBD,0xCD,0xDD,0xF2,0x88,
	0x08,0x94,0xC3,0x5D,0x53,0x39,0xC5,0x76,0x19,0x46,0x78,0x92,0x74,0x5A,0x24,0x5A,0x24,0x59,0x24,0x0B,
	0xD3,0x88,0x32,0x17,0x9B,0x57,0xE1,0xBC,0x7F,0x72,0xCF,0x47,0x99,0x7F,0x14,0x82,0xD8,0xB1,0x9C,0x73,
	0xB1,0xF7,0x12,0x96,0x8A,0xF3,0xC7,0xCB,0xC7,0x8C,0xDB,0x45,0x92,0x6A,0x93,0xB7,0x2E,0xA3,0x05,0xBD,
	0x94,0xCA,0x42,0x28,0x0B,0xED,0x79,0x99,0x16,0x96,0x90,0x99,0xA9,0xB9,0xC4,0xEC,0x94,0x12,0x2A,0x9F,
	0x68,0xBB,0x89,0x2B,0xF5,0xCC,0x22,0x59,0x6B,0xAB,0x6E,0x94,0xD2,0xAE,0x9E,0x9A,0xBC,0x7C,0x71,0xB1,
	0x91,0x99,0xC5,0x8F,0xC3,0xA4,0x73,0xF0,0x4B,0xAC,0x82,0xF4,0x5B,0x7D,0xA6,0x0F,0x26,0xB9,0xD3,0xE9,
	0x9B,0xEF,0x84,0x49,0x2B,0x42,0xF2,0x5A,0x1D,0x24,0x39,0xFA,0x10,0x3A,0xA5,0xC6,0xC0,0x6B,0x7E,0x36,
	0x4E,0x59,0x89,0x17,0xCE,0x6C,0xAB,0xE4,0x20,0xE6,0x0B,0x27,0x1F,0x79,0xB4,0x0D,0x50,0xC6,0xAC,0x0F,
	0x39,0xDB,0x0C,0xDA,0xC1,0x28,0xBA,0x03,0xFA,0xEE,0xD1,0xD6,0x8F,0x68,0x67,0x14,0xD6,0x8D,0x4E,0x26,
	0x94,0xAF,0xE9,0x8E,0x65,0xD5,0xD2,0xFD,0xCC,0x86,0x37,0x02,0x7E,0xE4,0x61,0x1D,0xFE,0x05,0x59,0xB7,
	0x9D,0x6F,0x74,0xD9,0xD9,0x7A,0x30,0x8A,0x03,0xE3,0x49,0xA6,0xBC,0xFC,0x66,0xFB,0x49,0x38,0x08,0xE9,
	0xAD,0x1B,0xD7,0x35,0x2C,0x34,0x7F,0x8A,0xB1,0x05,0x44,0x8F,0xAA,0x7A,0x85,0xE5,0xB5,0x7B,0xD7,0xF3,
	0xCC,0x28,0xC7,0x4E,0xAE,0x8A,0x9D,0x0D,0xB4,0xFB,0x06,0xF8,0x4E,0x26,0x88,0x2E,0xAC,0x0A,0xDF,0x4D,
	0x2B,0xB7,0x0F,0x08,0x77,0x05,0x64,0x9C,0x6B,0x6E,0x8D,0x60,0x65,0x90,0xEC,0x42,0x15,0x8A,0x12,0x64,
	0x45,0x31,0xA2,0x4B,0xCA,0x47,0x1A,0x27,0xE6,0xC6,0xBB,0xB3,0x7A,0xED,0xCD,0xA0,0x9D,0xEC,0xE4,0xC2,
	0x54,0x8B,0x8F,0x20,0xB2,0xE3,0x5D,0x4A,0x86,0xD3,0x84,0x67,0xFC,0x7D,0x07,0xB9,0xEE,0x21,0x46,0xD1,
	0x9A,0x81,0xD1,0x99,0x46,0xBA,0xD7,0x76,0xDD
};

//regen_vmt
static unsigned char SPOT2[] =
{
	0xEC,0xAF,0xCA,0x36,0xB7,0x0D,0x59,0xC1,0xFA,0xA7,0x71,0xB3,0x8D,0x4B,0x07,0x02,0xF5,0x0A,0x5E,0x60,
	0x8D,0x14,0x7B,0x56,0x61,0x3F,0xBD,0x49,0x53,0xBC,0xCB,0x04,0x49,0xFE,0x78,0xB6,0xA4,0x10,0x0C,0x95,
	0x42,0x53,0x10,0xB8,0xC3,0xFA,0x5F,0x1D,0x23,0x08,0xB0,0x32,0xB5,0x85,0x8A,0x8C,0x0C,0xCE,0x6E,0xF8,
	0x1A,0x76,0x8F,0x07,0x3E,0xDE,0xCC,0x6F,0x68,0xE1,0xF4,0x19,0xC4,0x69,0x3C,0xD4,0xA8,0x78,0x36,0x15,
	0x03,0x52,0x30,0xB9,0xC3,0xF7,0x5E,0xBD,0x20,0x89,0xB4,0x3A,0xD5,0x65,0x31,0x82,0x46,0xA1,0x97,0x5B,
	0xE4,0xCE,0xA6,0x63,0x9D,0x65,0x13,0x7A,0x99,0xC8,0xA6,0xB0,0xAD,0x95,0x76,0x32,0x50,0xA0,0x17,0x9B,
	0xC4,0x4E,0xD7,0xA3,0x5D,0x63,0x12,0x9A,0x1E,0x32,0x6F,0x01,0xFA,0xCC,0xDD,0xB5,0x4B,0xA9,0xBD,0xEC,
	0x1F,0x63,0x0D,0x31,0xCB,0xC8,0x41,0xBF,0xA0,0xB7,0x63,0xD4,0x1D,0x8B,0x18,0xB3,0xD6,0xE2,0xE5,0xBC,
	0xB7,0x0D,0x5E,0x42,0xFD,0xA6,0x70,0xD7,0xCA,0xC5,0x97,0x2F,0x72,0xE8,0x5F,0x75,0xB2,0xBF,0x79,0x89,
	0xCC,0x14,0x5B,0x55,0x61,0xBE,0xFD,0x41,0xFB,0x7D,0x48,0x42,0x5B,0x72,0xC7,0xBB,0x94,0x80,0x7A,0x6E,
	0xD9,0x66,0xAD,0x8F,0x48,0x4C,0x87,0xF7,0xCE,0x02,0xF8,0x1F,0xB6,0x5A,0x8F,0x16,0xE2,0x89,0x1A,0xF2,
	0x13,0x9E,0x88,0x1A,0x25,0xB5,0xF8,0x62,0x26,0xC7,0x9E,0x7A,0xAD,0x28,0x6F,0xBF,0x67,0x12,0x79,0xE5,
	0x1A,0x72,0x0F,0x09,0x30,0xD9,0xC9,0xAC,0x12,0x86,0x93,0xFB,0xA6,0xC8,0x09,0x42,0xE0,0x70,0x1D,0x08,
	0x0D,0x2B,0x3B,0x55,0xEF,0x01,0x22,0x3B,0xBB,0x9F,0x24,0x79,0x75,0x72,0x42,0x55,0x8D,0x27,0x3B,0x8E,
	0x4F,0x23,0x15,0xD1,0xE8,0x8A,0x67,0x93,0x8A,0xB3,0x44,0xC5,0x46,0x17,0x9F,0x10,0xA7,0x12,0x58,0x7F,
	0x51,0x87,0x6E,0x9D,0xB9,0x2E,0x34,0x5A,0x72,0x8D,0x4B,0x41,0x7C,0x36,0xED,0xED,0x62,0x7F,0xC2,0x83,
	0x48,0x3F,0x94,0xAA,0x55,0x95,0xE8,0xE0,0x2F,0xF5,0x0D,0xB4,0xD2,0x3D,0xD5,0x02,0x4E,0x2A,0x09,0x45,
	0xEA,0xB2,0x27,0x69,0x93,0x18,0x2E,0xB8,0x3C,0xA9,0xAA,0xBC,0x22,0x51,0x3A,0xDD,0x82,0xE3,0x86,0x8D,
	0xCE,0x21,0xDA,0x2F,0xE8,0x0A,0x27,0x98,0x7E,0x1B,0x00,0x7F,0x33,0x97,0xAB,0x98,0x03,0x1A,0x55,0xCE,
	0xAF,0xA0,0xC5,0x91,0xA8,0x8C,0xE4,0x80,0xE2,0x71,0x6A,0xD4,0x61,0xB7,0x14,0xC1,0x68,0x3C,0xD6,0xBA,
	0xB4,0x08,0xDE,0x43,0x7F,0x22,0x33,0x1D,0xFC,0x0E,0x58,0xCB,0xEC,0xFE,0x75,0xB3,0x90,0x9F,0x08,0x93,
	0x43,0x5F,0x90,0x3B,0x45,0x76,0x98,0xD6,0xFD,0x6A,0xB8,0x3B,0x55,0xA1,0x18,0x43,0x2A,0xDC,0xE5,0xA2,
	0x39,0xFB,0x1D,0x4C,0x77,0x50,0x05,0xA5,0x31,0x4D,0x4A,0xC5,0x69,0x3C,0x55,0x22,0x58,0xA3,0x1A,0x9D,
	0xC7,0x4D,0x57,0xA5,0x32,0x37,0x38,0xDC,0x69,0xC2,0xF7,0x58,0x52,0x22,0x64,0xC8,0xE8,0xEF,0xC8,0xE0,
	0x9C,0xF0,0xB6,0xFC,0xCA,0x46,0x9D,0x2A,0xA8,0x3C,0x14,0x8F,0xA6,0x52,0x92,0x0E,0x36,0x5C,0x12,0x63,
	0xDF,0x00,0x5F,0xDD
};


#pragma pack(push, 1)
typedef struct
{
	void  *code_ptr;

	union
	{
		struct
		{
			DWORD Param1;
			DWORD Param2;
			DWORD Param3;
			DWORD Param4;
			DWORD Param5;
			DWORD Param6;
		}std;
		struct
		{
			DWORD dest;
			DWORD src;
			DWORD Param3;
			DWORD Param4;
			DWORD Param5;
			DWORD Param6;
		}arithmetic;
		struct
		{
			DWORD compare_me;
			DWORD with_value;
			DWORD if_equal;
			DWORD if_not_equal;
			DWORD Param5;
			DWORD Param6;
		}cmp;
		struct
		{
			int	cmd;
			PBYTE				data_in;
			int					size_data_in;
			PBYTE				data_out;
			int*				size_data_out;
			DRM_API_ret_t*		result;
			drm_api_version_t	version;
		}drm_api;
	};
} VirtualMachine_t;
#pragma pack(pop)

#define SET_LABEL_ADDR(param, label_addr) \
	{ \
		DWORD addr; \
		__asm { mov addr, offset label_addr } \
		param = addr; \
	}
#endif





